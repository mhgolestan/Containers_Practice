services:
  app:
    image: hello-front-dev
    build:
      context: .
      dockerfile: dev.Dockerfile
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - VITE_BACKEND_URL=/api
    ports:
      - 5173:5173
    networks:
      - app-network
    container_name: hello-front-dev

  server:
    image: hello-backend-dev
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-backend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000
      - 9229:9229
    environment:
      - PORT=3000
      - HOST=0.0.0.0
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
    networks:
      - app-network
    depends_on:
      - mongo
      - redis
    restart: unless-stopped

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
    networks:
      - app-network

  redis:
    image: redis
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - ./todo-backend/redis_data:/data
    networks:
      - app-network

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    networks:
      - app-network
    depends_on:
      - app
      - server

networks:
  app-network:
    driver: bridge