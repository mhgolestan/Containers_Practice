services:
  server:
    image: backend-prod
    build:
      context: ./todo-backend
      dockerfile: Dockerfile
    environment:
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://root:example@mongo:27017/the_database?authSource=admin
      - NODE_ENV=production
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5

  app:
    image: frontend-prod
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile
    environment:
      - VITE_BACKEND_URL=/api
    depends_on:
      - server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      app:
        condition: service_healthy
      server:
        condition: service_healthy

volumes:
  mongo_data:
  redis_data: